@startuml img/achv_overview.png
skin BlueModern
title Overview - Questor Achievement-System
actor Customer
actor EndUser
== Customer creates account ==
Customer -> MandatorAccountSystem: createAccount
MandatorAccountSystem --> Customer: MandantorId

== Customer creates game ==
Customer -> WebEditor: createGame(MandatorId)
WebEditor -> GameDatabase: persistGame(MandatorId)
GameDatabase --> WebEditor: GameId
WebEditor --> Customer: GameId

== Customer creates achievements for game ==
Customer -> AchievementEditor: createAchievement(GameId)
Customer -> MandatorAccountSystem: authorizeForCreateAchievement(MandatorId)
MandatorAccountSystem --> Customer: CreateAchievementAuthorization
AchievementEditor -> AchievementSystem: persistAchievement(CreateAchievementAuthorization, GameId)
AchievementSystem -> MandatorAccountSystem: validate(CreateAchievementAuthorization, MandantId, GameId)

== Customer publish game ==
Customer -> WebEditor: publishGame

== EndUser setups game ==
EndUser -> Store: downloadGame
EndUser -> AuthorizationServer: createAccount()
AuthorizationServer --> EndUser: UserId

== Game triggers events ==
EndUser -> Game: playGame(GameId, UserId)
EndUser -> AuthorizationServer: authorizeForGame()
AuthorizationServer --> EndUser: GameAuthorization
Game -> AchievementSystem: triggerEvents(GameAuthorization, GameId, UserId)
AchievementSystem -> AuthorizationServer: validate(GameAuthorization)
AchievementSystem -> UserBank: unlockAchievements(GameId, UserId)

== EndUser views events ==
EndUser -> AuthorizationServer: authorizeForViewAchievements()
AuthorizationServer --> EndUser: ViewAchievementsAuthorization
EndUser -> UserBank: viewAchievements(ViewAchievementsAuthorization, GameId, UserId)
@enduml
